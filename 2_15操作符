#include <stdio.h>


//操作符


//练习：（加减法）
//不创建临时变量，交换两个变量的值；

//int main()
//{
//	int a = 5;
//	int b = 3;
//	a = a + b;
//	b = a - b;
//	a = a - b;				//当a与b的值太大了，加起来的时候可能溢出，这时候再减的值可能不一样；
//	printf("%d,%d\n", a, b);
//	//异或算法，产生的不是0就是1，不会发生进位，所以不会溢出；
//	a = a ^ b;
//	b = a ^ b;
//	a = a ^ b;
//	printf("%d,%d\n", a, b);
//	return 0;
//}

//练习：计算一个数其补码的1的个数

//int main()
//{
//	int a = 0;
//	scanf("%d", &a);
//
//	int i = 0;
//	int count = 0;
//	for (i = 0; i < 32; i++)
//	{
//		if (((a >> i) & 1) == 1)		//a判断玩后没有改变，所以随着循环次数加大，判断条件是i加大，这样对应起来了。
//			count++;
//	}
//	printf("%d", count);
//	return 0;
//}


//a++与++a

int main()			
{
	int a = 1;
	printf("%d\n", a++);		//a++先使用，后+；
	a = 1;
	printf("%d\n", ++a);		//++a先+，后使用；

	int i = 0;
	int b = 1, c = 3, d = 3, e = 8;
	i = b++ && ++c && d++;
	printf("%d %d %d %d", b, c, d, e);				//验证与或逻辑门的短路定律。
	return 0;
}


//创建一个结构体

struct str				//像图纸。
{
	char name[20];
	int age[20];

};

int main()
{
	//使用自定义结构体创建一个学生 p1；		//像用上面的图纸制造出来的房子1
	struct str p1 = {"zhangsan",18};

	//	1.创建指针存储
	struct str* P = &p1;		//创建与对象同类型的指针类型；

	// . 的用法
	printf("%c", (*P).name);	//

	//-> 的用法
	printf("%c", P->name);		//

	//2.不创建指针：

	printf("%c", p1.name);		//

	return 0;
}
