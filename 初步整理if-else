//C语言一般有三种结构，顺序结构，选择结构，循环结构。

//选择结构就是分支语句：if，switch。

//C语言中如何表示真假？如果输出0则为假，则非0为真。


//if 

//1.多分支
//if(表达式)		
//	语句1；
//else if(表达式)
//	语句2；
//else 
//	语句3；

//需要注意，当多分支的if或 else的语句需要执行多行语句，则需要加上{}；


#include <stdio.h>

//int main()
//{
//	
// //举例1.单语句多分支：判断a，b，c，d四个数的大小并输出。
//	//一种写法：
//	/*int a = 0; 
//	int b = 1;
//	int c = 1;
//	int d=1;
//	int max = 1;
//	
//	scanf("%d %d %d %d", &a, &b, &c,&d);
//
//	if (a > b)
//		max = a;
//	else if (b > c)
//		max = b;
//	else if(c>d)			//如果判断条件不用这么多，最后一个else可以省略。
//		max = c;
//	else
//		max=d;
//	printf("%d", max);*/
//
//	
// //另一种写法：
//	/*int a = 0;
//	int b = 1;
//	int c = 1;
//	int d = 1;
//	int max = 1;
//	scanf("%d %d %d %d", &a, &b, &c, &d);
//
//	if (a > b)
//		max = a;
//	else
//	{
//		if (b > c)
//			max = b;
//		else if (c > d)
//			max = c;
//		else
//			max = d;
//	}
//	printf("%d", max);*/
//
//	//两者的区别是嵌套形式不一样。
//	/*一个是if - else if -else if -else
//	  一个是if - else -{if - else if - else}*/
//	return 0;
//}

//2.多语句多分支
//例子：比较a，b的大小，当a>b 则输出“中奖”。当b>a则无反应。最后输出最大值。
//在对应分支的语句中加入中括号（块），用来执行该分支的多条语句。

//int main()
//{
//	int a = 3;
//	int b = 1;
//	int max = 1;
//	if (a > b)
//	{
//		max = a;
//		printf("中奖\n");
//	}
//	else
//		max = b;
//
//	printf("%d", max);
//	return 0;
//}

//3.就近原则
//else总是与离它最近的前面的if组成if else语句。
//例子：如下。

//可以看到，下面的代码的else是与第二个if组成了一个分支语句。所以if a==2这条分支语句没有else。
//所以当a==1时，下面的if-else语句才会执行，由于else空，所以该程序不输出任何结果。
//这就是就近原则。所以在程序编写的时候，最好if else在同一列表示。若想让else与别的if匹配，可以把夹在之间的if用中括号括起来。

//int main()		//无{}
//{
//	int a = 1;
//	int b = 1;
//	if (a == 2)
//		if (b = 1)
//			printf("hehe");
//		else
//			printf("haha");
//
//	return 0;
//}


//int main()		//有{}
//{
//	int a = 1;
//	int b = 1;
//	if (a == 2)
//		{
//			if (b = 1)
//				printf("hehe");
//		}
//	else
//		printf("haha");
//
//	return 0;
//}

//练习：判断1到100的奇数。
//输出奇数。

//int main()
//{
//	//先筛选奇数,然后是奇数就输出，不是就无输出。
//int i = 1;
//for(;i<100;i++)
//{
//	if (i % 2 == 1)
//		printf("%d\n", i);
//}
//	return 0;
//}

int main()
{
	//先筛选奇数,然后是奇数就输出，不是就无输出。
	int i = 1;
	while (i<100)
	{
		if (i % 2 == 1)
			printf("%d\n", i);
			i++;
	}	
	return 0;
}
